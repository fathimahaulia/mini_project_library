# -*- coding: utf-8 -*-
"""Asistensi 18

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1G6ccwl5Zqw6HxivUrrSSjfiuL9axKyv-

# $\text{Python Feb 23 | Asistensi 18 | Mini Study Case}$
- Pekan = 6
- Asistensi = 3
- Minggu, 2 April 2023

- [Mini Case Instruction](https://docs.google.com/document/d/1t9ACvVyYYv-LG3A8Q-ErmFcv0NL4GqVjlw2J-d7L76o/edit?usp=sharing)

# **Dictionary** Implementation
Asistensi 18

## Buat Class dan Methods
"""

import pandas as pd

class Library():
    def __init__(self):
        self.data_buku = dict()  # judul sebagai index
        self.buku_dipinjam = dict()

    def tambah_buku(self, judul, tahun, jumlah):
        self.data_buku[judul] = [tahun, jumlah]
    
    def update_judul(self, judul, judul_baru):
        self.data_buku[judul_baru] = self.data_buku.pop(judul)
        # self.data_buku[judul_baru] = temp
        # self.data_buku.update({judul_baru: temp})

    def update_tahun(self, judul, tahun_baru):
        try:
            self.data_buku[judul][0] = tahun_baru
        except KeyError:
            print('Buku Tersebut Tidak Ada')

    def update_jumlah(self, judul, jumlah_baru):
        try:
            self.data_buku[judul][1] = jumlah_baru
        except KeyError:
            print('Buku Tersebut Tidak Ada')

    def check_data_buku(self):
        data = pd.DataFrame((self.data_buku)).T
        data.columns = ['Tahun Terbit', 'Jumlah Tersedia']
        print(data.to_markdown())

    def pinjam_buku(self, judul):
        if(self.data_buku[judul][1] == 0):
            print('Buku Tidak Tersedia')
        else:
            # mengurangi data buku -1 di jumlah tersedia
            self.update_jumlah(judul, self.data_buku[judul][1]-1)
            # menambahkan data di buku yang dipinjam
            try:
                # judul buku yang dipinjam sudah ada di data buku_dipinjam
                self.buku_dipinjam[judul][1] = self.buku_dipinjam[judul][1] + 1
            except KeyError:
                # judul buku yang dipinjam belum ada di data buku_dipnijam
                self.buku_dipinjam[judul] = [self.data_buku[judul][0], 1]

    def kembali_buku(self, judul):
        if(self.buku_dipinjam[judul][1] == 1):
            self.buku_dipinjam.pop(judul)
        else:
            # mengurangi data buku -1 di buku_dipnijam
            self.buku_dipinjam[judul][1] = self.buku_dipinjam[judul][1] - 1
            # menambah jumlah buku di data buku
            self.data_buku[judul][1] = self.data_buku[judul][1] + 1

    def check_buku_dipinjam(self):
        data = pd.DataFrame((self.buku_dipinjam)).T
        data.columns = ['Tahun Terbit', 'Jumlah Dipinjam']
        print(data.to_markdown())

"""## Implementasi Class (Modular Code)"""

lib_1 = Library()
lib_1.tambah_buku('Intro Python', '1997', 3)

lib_1.tambah_buku('Data Science', '2015', 2)

lib_1.check_data_buku()

lib_1.pinjam_buku('Intro Python')

lib_1.check_buku_dipinjam()

lib_1.kembali_buku('Intro Python')

import asistensi_18

lib_1 = perpustakaan_mini.Library()

"""# **List** Implementation
Asistensi 19

## Buat Class dan Methods
"""

import pandas as pd

class Library():
    def __init__(self):
        self.data_buku = []
        self.buku_dipinjam = []
    
    def tambah_buku(self, judul, tahun, jumlah):
        self.data_buku.append([judul, tahun, jumlah])
    
    def check_data_buku(self):
        if(len(self.data_buku)==0):
            print('Tidak Ada Buku di Perpustakaan')
        else:
            data = pd.DataFrame((self.data_buku))
            data.columns = ['Judul', 'Tahun Terbit', 'Jumlah Tersedia']
            print(data.to_markdown())
    
    def update_judul(self, judul, judul_baru):
        try:
            self.data_buku[self.return_index(judul)][0] = tahun_baru
            print('Data Judul Berhasil Diperbarui')
        except:
            print('Buku Tidak Ditemukan')

    def update_tahun(self, judul, tahun_baru):
        try:
            self.data_buku[self.return_index(judul)][1] = tahun_baru
            print('Data Tahun Terbit Berhasil Diperbarui')
        except:
            print('Buku Tidak Ditemukan')

    def update_jumlah(self, judul, jumlah_baru):
        try:
            self.data_buku[self.return_index(judul)][2] = jumlah_baru
            print('Data Jumlah Buku Berhasil Diperbarui')
        except:
            print('Buku Tidak Ditemukan')

    def return_index(self, judul):
        for i in range(len(self.data_buku)):
            if self.data_buku[i][0] == judul:
                return i

    def return_index_buku(self, judul, nama_peminjam):
        for i in range(len(self.buku_dipinjam)):
            if self.buku_dipinjam[i][0] == judul and self.buku_dipinjam[i][1] == nama_peminjam:
                return i

    def check_buku_dipinjam(self):
        if(len(self.buku_dipinjam)==0):
            print('Tidak Ada Buku yang sedang dipinjam')
        else:
            data = pd.DataFrame((self.buku_dipinjam))
            data.columns = ['Judul', 'Nama Peminjam']
            print(data.to_markdown())

    def pinjam_buku(self, judul, nama_peminjam):
        try:    
            # mengurangi jumlah buku di data_buku
            self.data_buku[self.return_index(judul)][2] -= 1
            # menambah data di buku_dipinjam
            self.buku_dipinjam.append([judul, nama_peminjam])
        except:
            print('Buku Tidak Ditemukan')

    def kembali_buku(self, judul, nama_peminjam):
        # menghapus data peminjaman di buku_dipinjam
        self.buku_dipinjam.pop(self.return_index_buku(judul, nama_peminjam))
        # menambah data jumlah di data_buku
        self.data_buku[self.return_index(judul)][2] += 1

"""## Implementasi Class (Modular Code)"""

lib_1 = Library()
lib_1.tambah_buku('Intro Python', '1997', 3)
lib_1.tambah_buku('Data Science', '2015', 2)

lib_1.check_data_buku()

lib_1.pinjam_buku('Data Science', 'Fathimah')

lib_1.check_buku_dipinjam()

lib_1.kembali_buku('Data Science', 'Fathimah')

"""---
# $\text{Feedback Asistensi}$
Terima Kasih telah mengikuti sesi asistensi hari ini! ðŸ˜€

Jangan lupa untuk mengisi feedback juga yaa, link feedback dapat diakses di
[sini](https://bit.ly/FeedbackAsistensiSDA-Feb23)
- Kelas = Python
- Teaching Assistant = Fathimah Aulia
"""